version: '3.9'
#services:
#  # app:
#  #   container_name: test-app
#  #   build: .
#  #   image: test
#  #   depends_on:
#  #     - postgres
#  #   ports:
#  #     - 8888:8888
#  postgres:
#    image: postgres
#    restart: always
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_DB=postgres
#    ports:
#      - '5432:5432'
#    volumes:
#      - postgres_db:/var/lib/postgresql/data
#volumes:
#  postgres_db: {}

#
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: app
    depends_on:
      - postgres
    restart: always
    ports:
      - '8888:8888'

  postgres:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=postgres

  prometheus:
    image: prom/prometheus:v2.24.0
    volumes:
      - "C:/Users/00057658/Desktop/prometheus_config:/etc/prometheus/"
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  prometheus_data:
  grafana-storage: